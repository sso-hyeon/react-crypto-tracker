{"version":3,"sources":["api.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Chart","coinId","mode","useQuery","endDate","Math","ceil","Date","now","startDate","fetchCoinHistory","isLoading","data","type","series","name","map","price","x","time_close","y","open","toFixed","high","low","close","options","theme","chart","height","width","toolbar","show","background","dataLabels","enabled","grid","plotOptions","candlestick","colors","upward","downward","wick","useFillColor","yaxis","xaxis","axisBorder","axisTicks","labels","categories","value","Li","styled","li","props","contentsBgColor","textColor","Price","fetchCoinToday","refetchInterval","at","volume","market_cap","Container","div","Header","header","Title","h1","accentColor","Loader","span","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","BackBtn","button","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","to","rank","symbol","quotes","USD","description","total_supply","max_supply","path","CoinList","ul","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","basename","process","bgColor","lightTheme","GLobalStyle","createGlobalStyle","ModeBtn","App","useState","setMode","onClick","prev","initialIsOpen","queryClient","QueryClient","ReactDOM","render","client","document","getElementById"],"mappings":"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","file":"static/js/main.6b5cbd5d.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n    return fetch(`${BASE_URL}/coins`).then(response => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n    return fetch(`${BASE_URL}/coins/${coinId}`).then(response => response.json());\n}\n\nexport function fetchCoinTickers(coinId: string) {\n    return fetch(`${BASE_URL}/tickers/${coinId}`).then(response => response.json());\n}\n\nexport function fetchCoinHistory(coinId: string) {\n    const endDate = Math.ceil(Date.now() / 1000);\n    // 4주일 전\n    const startDate = endDate - 60 * 60 * 24 * 7 * 4;\n    return fetch(\n        `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n    ).then(response => response.json());\n}\n\nexport function fetchCoinToday(coinId: string) {\n    return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/today`).then(response =>\n        response.json()\n    );\n}\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface ChartProps {\n    coinId: string;\n    mode: boolean;\n}\n\ninterface IHistorical {\n    time_open: string;\n    time_close: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n}\n\nfunction Chart({ coinId, mode }: ChartProps) {\n    const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\n        fetchCoinHistory(coinId)\n    );\n    return (\n        <div>\n            {isLoading ? (\n                \"Loading chart...\"\n            ) : (\n                <ApexChart\n                    type=\"candlestick\"\n                    series={[\n                        {\n                            name: \"Price\",\n                            data:\n                                data?.map(price => ({\n                                    x: price.time_close,\n                                    y: [\n                                        price.open.toFixed(3),\n                                        price.high.toFixed(3),\n                                        price.low.toFixed(3),\n                                        price.close.toFixed(3)\n                                    ]\n                                })) ?? []\n                        }\n                    ]}\n                    options={{\n                        theme: { mode: mode ? \"dark\" : \"light\" },\n                        chart: {\n                            height: 500,\n                            width: 500,\n                            toolbar: { show: false },\n                            background: \"transparent\"\n                        },\n                        dataLabels: {\n                            enabled: false\n                        },\n                        grid: { show: true },\n                        plotOptions: {\n                            candlestick: {\n                                colors: {\n                                    upward: \"#ee5353\",\n                                    downward: \"#2e86de\"\n                                },\n                                wick: {\n                                    useFillColor: true\n                                }\n                            }\n                        },\n                        yaxis: {\n                            show: false\n                        },\n                        xaxis: {\n                            axisBorder: { show: true },\n                            axisTicks: { show: false },\n                            labels: {\n                                show: true\n                            },\n                            type: \"datetime\",\n                            categories: data?.map(value => value.time_close)\n                        }\n                    }}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchCoinToday } from \"../api\";\n\nconst Li = styled.li`\n    width: 100%;\n    line-height: 40px;\n    color: black;\n    background-color: ${props => props.theme.contentsBgColor};\n    margin-bottom: 15px;\n    text-align: center;\n    display: flex;\n    justify-content: space-around;\n    border-radius: 10px;\n    font-weight: bold;\n    color: ${props => props.theme.textColor};\n    span {\n        font-weight: normal;\n    }\n`;\n\ninterface PriceProps {\n    coinId: string;\n}\n\ninterface IToday {\n    time_open: string;\n    time_close: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n}\n\nfunction Price({ coinId }: PriceProps) {\n    const { isLoading, data } = useQuery<IToday[]>(\n        [\"todayPrice\", coinId],\n        () => fetchCoinToday(coinId),\n        {\n            refetchInterval: 5000\n        }\n    );\n\n    return (\n        <div>\n            {isLoading ? (\n                \"Loading price...\"\n            ) : (\n                <ul>\n                    <Li>\n                        Open <span>{data?.at(0)?.open.toFixed(3)}</span>\n                    </Li>\n                    <Li>\n                        High <span>{data?.at(0)?.high.toFixed(3)}</span>\n                    </Li>\n                    <Li>\n                        Low <span>{data?.at(0)?.low.toFixed(3)}</span>\n                    </Li>\n                    <Li>\n                        Volume <span>{data?.at(0)?.volume}</span>\n                    </Li>\n                    <Li>\n                        Market cap <span>{data?.at(0)?.market_cap}</span>\n                    </Li>\n                </ul>\n            )}\n        </div>\n    );\n}\n\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport {\n    Link,\n    Route,\n    Switch,\n    useLocation,\n    useParams,\n    useRouteMatch\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Container = styled.div`\n    padding: 0px 20px;\n    max-width: 480px;\n    margin: 0 auto;\n`;\n\nconst Header = styled.header`\n    height: 15vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n`;\n\nconst Title = styled.h1`\n    font-size: 48px;\n    color: ${props => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n    text-align: center;\n    display: block;\n`;\n\nconst Overview = styled.div`\n    display: flex;\n    justify-content: space-between;\n    background-color: ${props => props.theme.contentsBgColor};\n    padding: 10px 20px;\n    border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    span:first-child {\n        font-size: 10px;\n        font-weight: 400;\n        text-transform: uppercase;\n        margin-bottom: 5px;\n    }\n`;\nconst Description = styled.p`\n    margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    margin: 25px 0px;\n    gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n    text-align: center;\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 400;\n    background-color: ${props => props.theme.contentsBgColor};\n    padding: 7px 0px;\n    border-radius: 10px;\n    color: ${props => (props.isActive ? props.theme.accentColor : props.theme.textColor)};\n    a {\n        display: block;\n    }\n`;\n\nconst BackBtn = styled.button`\n    font-size: 30px;\n    border: none;\n    background-color: transparent;\n    padding: 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 70px;\n    line-height: 15vh;\n    a {\n        display: block;\n    }\n`;\n\ninterface Params {\n    coinId: string;\n}\ninterface RouteState {\n    name: string;\n}\n\ninterface InfoData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    is_new: boolean;\n    is_active: boolean;\n    type: string;\n    description: string;\n    message: string;\n    open_source: boolean;\n    started_at: string;\n    development_status: string;\n    hardware_wallet: boolean;\n    proof_type: string;\n    org_structure: string;\n    hash_algorithm: string;\n    first_data_at: string;\n    last_data_at: string;\n}\n\ninterface PriceData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    circulating_supply: number;\n    total_supply: number;\n    max_supply: number;\n    beta_value: number;\n    first_data_at: string;\n    last_updated: string;\n    quotes: {\n        USD: {\n            ath_date: string;\n            ath_price: number;\n            market_cap: number;\n            market_cap_change_24h: number;\n            percent_change_1h: number;\n            percent_change_1y: number;\n            percent_change_6h: number;\n            percent_change_7d: number;\n            percent_change_12h: number;\n            percent_change_15m: number;\n            percent_change_24h: number;\n            percent_change_30d: number;\n            percent_change_30m: number;\n            percent_from_price_ath: number;\n            price: number;\n            volume_24h: number;\n            volume_24h_change_24h: number;\n        };\n    };\n}\n\ninterface Mode {\n    mode: boolean;\n}\n\nfunction Coin({ mode }: Mode) {\n    const { coinId } = useParams<Params>();\n    const { state } = useLocation<RouteState>();\n    const priceMatch = useRouteMatch(\"/:coinId/price\");\n    const chartMatch = useRouteMatch(\"/:coinId/chart\");\n    const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n        [\"info\", coinId],\n        () => fetchCoinInfo(coinId)\n    );\n    const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n        [\"tickers\", coinId],\n        () => fetchCoinTickers(coinId)\n        // {\n        //     refetchInterval: 5000\n        // }\n    );\n\n    const loading = infoLoading || tickersLoading;\n    return (\n        <Container>\n            <Helmet>\n                <title>coin</title>\n            </Helmet>\n            <Header>\n                <BackBtn>\n                    <Link to={\"/\"}>👈</Link>\n                </BackBtn>\n                <Title>\n                    {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n                </Title>\n            </Header>\n            {loading ? (\n                <Loader>Loading...</Loader>\n            ) : (\n                <>\n                    <Overview>\n                        <OverviewItem>\n                            <span>Rank:</span>\n                            <span>{infoData?.rank}</span>\n                        </OverviewItem>\n                        <OverviewItem>\n                            <span>Symbol:</span>\n                            <span>${infoData?.symbol}</span>\n                        </OverviewItem>\n                        <OverviewItem>\n                            <span>Price:</span>\n                            <span>{tickersData?.quotes.USD.price.toFixed(3)}</span>\n                        </OverviewItem>\n                    </Overview>\n                    <Description>{infoData?.description}</Description>\n                    <Overview>\n                        <OverviewItem>\n                            <span>Total Suply:</span>\n                            <span>{tickersData?.total_supply}</span>\n                        </OverviewItem>\n                        <OverviewItem>\n                            <span>Max Supply:</span>\n                            <span>{tickersData?.max_supply}</span>\n                        </OverviewItem>\n                    </Overview>\n                    <Tabs>\n                        <Tab isActive={chartMatch !== null}>\n                            <Link to={`/${coinId}/chart`}>Chart</Link>\n                        </Tab>\n                        <Tab isActive={priceMatch !== null}>\n                            <Link to={`/${coinId}/price`}>Price</Link>\n                        </Tab>\n                    </Tabs>\n\n                    <Switch>\n                        <Route path={`/:coinId/price`}>\n                            <Price coinId={coinId} />\n                        </Route>\n                        <Route path={`/:coinId/chart`}>\n                            <Chart coinId={coinId} mode={mode} />\n                        </Route>\n                    </Switch>\n                </>\n            )}\n        </Container>\n    );\n}\n\nexport default Coin;\n","import { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n    padding: 0px 20px;\n    max-width: 480px;\n    margin: 0 auto;\n`;\n\nconst Header = styled.header`\n    height: 15vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst CoinList = styled.ul``;\n\nconst Coin = styled.li`\n    background-color: ${props => props.theme.contentsBgColor};\n    color: ${props => props.theme.textColor};\n    border-radius: 15px;\n    margin-bottom: 10px;\n    a {\n        padding: 20px;\n        transition: color 0.2s ease-in;\n        display: flex;\n        align-items: center;\n    }\n    &:hover {\n        a {\n            color: ${props => props.theme.accentColor};\n        }\n    }\n`;\n\nconst Title = styled.h1`\n    font-size: 48px;\n    color: ${props => props.theme.accentColor};\n`;\n\nconst Img = styled.img`\n    width: 35px;\n    height: 35px;\n    margin-right: 10px;\n`;\n\ninterface ICoin {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    is_new: boolean;\n    is_active: boolean;\n    type: string;\n}\n\nconst Loader = styled.span`\n    text-align: center;\n    display: block;\n`;\n\nfunction Coins() {\n    const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n    return (\n        <Container>\n            <Header>\n                <Title>Coins</Title>\n            </Header>\n            {isLoading ? (\n                <Loader>Loading...</Loader>\n            ) : (\n                <CoinList>\n                    {data?.slice(0, 100).map(coin => (\n                        <Coin key={coin.id}>\n                            <Link\n                                to={{\n                                    pathname: `/${coin.id}`,\n                                    state: { name: coin.name }\n                                }}\n                            >\n                                <Img\n                                    src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                                />\n                                {coin.name} &rarr;\n                            </Link>\n                        </Coin>\n                    ))}\n                </CoinList>\n            )}\n        </Container>\n    );\n}\n\nexport default Coins;\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\ninterface Mode {\n    mode: boolean;\n}\n\nfunction Router({ mode }: Mode) {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route path=\"/:coinId\">\n                    <Coin mode={mode} />\n                </Route>\n                <Route path=\"/\">\n                    <Coins />\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n    bgColor: \"#2f3640\",\n    textColor: \"#f5f6fa\",\n    accentColor: \"#44bd32\",\n    contentsBgColor: \"rgba(0,0,0,0.5)\"\n};\n\nexport const lightTheme: DefaultTheme = {\n    bgColor: \"#f5f6fa\",\n    textColor: \"#2f3640\",\n    accentColor: \"#44bd32\",\n    contentsBgColor: \"#F9EBC8\"\n};\n","import styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport Router from \"./Router\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport { lightTheme, theme } from \"./theme\";\r\nimport { useState } from \"react\";\r\n\r\nconst GLobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400;700&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, font, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\toutline: 0;\r\n\tfont-size: 100%;\r\n\tvertical-align: baseline;\r\n\tbackground: transparent;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\n\r\n:focus {\r\n\toutline: 0;\r\n}\r\n\r\nins {\r\n\ttext-decoration: none;\r\n}\r\ndel {\r\n\ttext-decoration: line-through;\r\n}\r\n\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n* {\r\n    box-sizing: border-box;\r\n}\r\nbody {\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n    background-color: ${props => props.theme.bgColor};\r\n    color: ${props => props.theme.textColor};\r\n}\r\na {\r\n    text-decoration: none;\r\n    color: inherit;\r\n}\r\n`;\r\n\r\nconst ModeBtn = styled.button`\r\n    border: none;\r\n    position: absolute;\r\n    top: 5vh;\r\n    left: 370px;\r\n    right: 0;\r\n    margin: 0 auto;\r\n    font-size: 25px;\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 25px;\r\n    background-color: ${props => props.theme.textColor};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nfunction App() {\r\n    const [mode, setMode] = useState<boolean>(true);\r\n    const onClick = () => {\r\n        setMode(prev => !prev);\r\n    };\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={mode ? theme : lightTheme}>\r\n                <ModeBtn onClick={onClick}>{mode ? \"🌞\" : \"🌙\"}</ModeBtn>\r\n                <GLobalStyle />\r\n                <Router mode={mode} />\r\n                <ReactQueryDevtools initialIsOpen={false} />\r\n            </ThemeProvider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport App from \"./App\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n    <>\r\n        <QueryClientProvider client={queryClient}>\r\n            <App />\r\n        </QueryClientProvider>\r\n    </>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}